diff --git a/node_modules/react-native-country-picker-modal/lib/CountryModal.d.ts b/node_modules/react-native-country-picker-modal/lib/CountryModal.d.ts
index 3d1d29e..998adc4 100644
--- a/node_modules/react-native-country-picker-modal/lib/CountryModal.d.ts
+++ b/node_modules/react-native-country-picker-modal/lib/CountryModal.d.ts
@@ -1,14 +1,10 @@
 import * as React from 'react';
 export declare const CountryModal: {
-    ({ children, withModal, disableNativeModal, ...props }: import("react-native").ModalBaseProps & import("react-native").ModalPropsIOS & import("react-native").ModalPropsAndroid & {
-        children: React.ReactNode;
-        withModal?: boolean | undefined;
-        disableNativeModal?: boolean | undefined;
-    }): JSX.Element | null;
-    defaultProps: {
+    ({ animationType, animated, withModal, disableNativeModal, children, ...props }: import("react-native").ModalBaseProps & import("react-native").ModalPropsIOS & import("react-native").ModalPropsAndroid & {
         animationType: string;
         animated: boolean;
         withModal: boolean;
         disableNativeModal: boolean;
-    };
+        children: React.ReactNode;
+    }): JSX.Element | null;
 };
diff --git a/node_modules/react-native-country-picker-modal/lib/CountryModal.js b/node_modules/react-native-country-picker-modal/lib/CountryModal.js
index 1678e95..4640560 100644
--- a/node_modules/react-native-country-picker-modal/lib/CountryModal.js
+++ b/node_modules/react-native-country-picker-modal/lib/CountryModal.js
@@ -9,7 +9,10 @@ const styles = StyleSheet.create({
         flex: 1,
     },
 });
-export const CountryModal = ({ children, withModal, disableNativeModal, ...props }) => {
+export const CountryModal = ({ animationType = 'slide',
+                                 animated = true,
+                                 withModal = true,
+                                 disableNativeModal = false, children, ...props }) => {
     const { backgroundColor } = useTheme();
     const { teleport } = React.useContext(CountryModalContext);
     const content = (React.createElement(SafeAreaView, { style: [styles.container, { backgroundColor }] }, children));
@@ -29,10 +32,4 @@ export const CountryModal = ({ children, withModal, disableNativeModal, ...props
     }
     return content;
 };
-CountryModal.defaultProps = {
-    animationType: 'slide',
-    animated: true,
-    withModal: true,
-    disableNativeModal: false,
-};
 //# sourceMappingURL=CountryModal.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-country-picker-modal/lib/CountryPicker.d.ts b/node_modules/react-native-country-picker-modal/lib/CountryPicker.d.ts
index 4ec9804..1f641d6 100644
--- a/node_modules/react-native-country-picker-modal/lib/CountryPicker.d.ts
+++ b/node_modules/react-native-country-picker-modal/lib/CountryPicker.d.ts
@@ -40,11 +40,5 @@ interface CountryPickerProps {
 }
 export declare const CountryPicker: {
     (props: CountryPickerProps): JSX.Element;
-    defaultProps: {
-        withModal: boolean;
-        withAlphaFilter: boolean;
-        withCallingCode: boolean;
-        placeholder: string;
-    };
 };
 export {};
diff --git a/node_modules/react-native-country-picker-modal/lib/CountryPicker.js b/node_modules/react-native-country-picker-modal/lib/CountryPicker.js
index c4ba18e..0289e1b 100644
--- a/node_modules/react-native-country-picker-modal/lib/CountryPicker.js
+++ b/node_modules/react-native-country-picker-modal/lib/CountryPicker.js
@@ -8,8 +8,38 @@ import { useContext } from './CountryContext';
 import { CountryList } from './CountryList';
 const renderFlagButton = (props) => props.renderFlagButton ? (props.renderFlagButton(props)) : (React.createElement(FlagButton, Object.assign({}, props)));
 const renderFilter = (props) => props.renderCountryFilter ? (props.renderCountryFilter(props)) : (React.createElement(CountryFilter, Object.assign({}, props)));
-export const CountryPicker = (props) => {
-    const { countryCode, region, subregion, countryCodes, renderFlagButton: renderButton, renderCountryFilter, filterProps, modalProps, flatListProps, onSelect, withEmoji, withFilter, withCloseButton, withCountryNameButton, withCallingCodeButton, withCurrencyButton, containerButtonStyle, withAlphaFilter, withCallingCode, withCurrency, withFlag, withModal, disableNativeModal, withFlagButton, onClose: handleClose, onOpen: handleOpen, closeButtonImage, closeButtonStyle, closeButtonImageStyle, excludeCountries, placeholder, preferredCountries } = props;
+export const CountryPicker = ({   withModal = true,
+                                  withAlphaFilter = false,
+                                  withCallingCode = false,
+                                  placeholder = 'Select Country',
+                                  countryCode,
+                                  region,
+                                  subregion,
+                                  countryCodes,
+                                  renderFlagButton: renderButton,
+                                  renderCountryFilter,
+                                  filterProps,
+                                  modalProps,
+                                  flatListProps,
+                                  onSelect,
+                                  withEmoji,
+                                  withFilter,
+                                  withCloseButton,
+                                  withCountryNameButton,
+                                  withCallingCodeButton,
+                                  withCurrencyButton,
+                                  containerButtonStyle,
+                                  withCurrency,
+                                  withFlag,
+                                  disableNativeModal,
+                                  withFlagButton,
+                                  onClose: handleClose,
+                                  onOpen: handleOpen,
+                                  closeButtonImage,
+                                  closeButtonStyle,
+                                  closeButtonImageStyle,
+                                  excludeCountries,
+                                  preferredCountries, ...props }) => {
     const [state, setState] = useState({
         visible: props.visible || false,
         countries: [],
@@ -93,10 +123,4 @@ export const CountryPicker = (props) => {
                 flatListProps,
             })))));
 };
-CountryPicker.defaultProps = {
-    withModal: true,
-    withAlphaFilter: false,
-    withCallingCode: false,
-    placeholder: 'Select Country',
-};
 //# sourceMappingURL=CountryPicker.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-country-picker-modal/lib/Flag.js b/node_modules/react-native-country-picker-modal/lib/Flag.js
index b974950..22ae676 100644
--- a/node_modules/react-native-country-picker-modal/lib/Flag.js
+++ b/node_modules/react-native-country-picker-modal/lib/Flag.js
@@ -45,9 +45,5 @@ const EmojiFlag = memo(({ countryCode, flagSize }) => {
     return (React.createElement(Text, { style: [styles.emojiFlag, { fontSize: flagSize }], allowFontScaling: false },
         React.createElement(Emoji, Object.assign({}, { name: asyncResult.result }))));
 });
-export const Flag = ({ countryCode, withEmoji, withFlagButton, flagSize, }) => withFlagButton ? (React.createElement(View, { style: styles.container }, withEmoji ? (React.createElement(EmojiFlag, Object.assign({}, { countryCode, flagSize }))) : (React.createElement(ImageFlag, Object.assign({}, { countryCode, flagSize }))))) : null;
-Flag.defaultProps = {
-    withEmoji: true,
-    withFlagButton: true,
-};
+export const Flag = ({ countryCode, withEmoji = true, withFlagButton = true, flagSize, }) => withFlagButton ? (React.createElement(View, { style: styles.container }, withEmoji ? (React.createElement(EmojiFlag, Object.assign({}, { countryCode, flagSize }))) : (React.createElement(ImageFlag, Object.assign({}, { countryCode, flagSize }))))) : null;
 //# sourceMappingURL=Flag.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-country-picker-modal/lib/index.js b/node_modules/react-native-country-picker-modal/lib/index.js
index 4a47213..8c31f92 100644
--- a/node_modules/react-native-country-picker-modal/lib/index.js
+++ b/node_modules/react-native-country-picker-modal/lib/index.js
@@ -2,15 +2,13 @@ import React from 'react';
 import { CountryProvider, DEFAULT_COUNTRY_CONTEXT } from './CountryContext';
 import { ThemeProvider, DEFAULT_THEME } from './CountryTheme';
 import { CountryPicker } from './CountryPicker';
-const Main = ({ theme, translation, ...props }) => {
+
+const Main = ({ theme, translation, onSelect = () => { }, withEmoji = true, ...props }) => {
     return (React.createElement(ThemeProvider, { theme: { ...DEFAULT_THEME, ...theme } },
         React.createElement(CountryProvider, { value: { ...DEFAULT_COUNTRY_CONTEXT, translation } },
             React.createElement(CountryPicker, Object.assign({}, props)))));
 };
-Main.defaultProps = {
-    onSelect: () => { },
-    withEmoji: true,
-};
+
 export default Main;
 export { getCountriesAsync as getAllCountries, getCountryCallingCodeAsync as getCallingCode, } from './CountryService';
 export { CountryModal } from './CountryModal';
